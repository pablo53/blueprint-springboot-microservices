version: '3.7'

services:
  db:
    image: postgres:12
    container_name: usvc_db
    restart: on-failure
    ports:
      - 0.0.0.0:5432:5432
    networks:
      - usvcnet
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: usvc
      POSTGRES_USER: usvc
      POSTGRES_PASSWORD: usvc
  mongodb:
    image: mongo:4.4.1
    container_name: usvc_mongodb
    restart: on-failure
    ports:
      - 0.0.0.0:27017:27017
    networks:
      - usvcnet
    volumes:
      - ${MONGO_DATA_DIR}:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: usvc
      MONGO_INITDB_ROOT_PASSWORD: usvc
  consul:
    image: consul:1.8.3
    container_name: usvc_consul
    entrypoint: ["consul", "agent", "-dev", "--config-dir=/consul/config"]
    restart: on-failure
    stdin_open: true
    tty: true
    ports:
      - 0.0.0.0:8501:8500
      - 0.0.0.0:8601:8600
      - 0.0.0.0:8601:8600/udp
    networks:
      - usvcnet
    volumes:
      - ${CONSUL_DATA_DIR}:/consul/data
      - ${CONSUL_CONFIG_DIR}:/consul/config
  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: usvc_elk
    restart: on-failure
    ports:
      - 0.0.0.0:9201:9200
      - 0.0.0.0:9301:9300
    networks:
      - usvcnet
    volumes:
      - ${ELK_DATA_DIR}:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
  kibana:
    image: kibana:7.9.1
    container_name: usvc_kibana
    restart: on-failure
    ports:
      - 0.0.0.0:5602:5601
    networks:
      - usvcnet
    volumes:
      - ${KIBANA_CONFIG_DIR}:/usr/share/kibana/config
  jaeger:
    image: jaegertracing/all-in-one:1.19.2
    container_name: usvc_jaeger
    restart: on-failure
    ports:
      - 0.0.0.0:16687:16686
      - 0.0.0.0:6832:6831
    networks:
      - usvcnet
    volumes:
      - ${JAEGER_DATA_DIR}:/tmp
    environment:
      MONGO_INITDB_ROOT_USERNAME: usvc
      MONGO_INITDB_ROOT_PASSWORD: usvc
  zookeeper1:
    image: zookeeper:3.6.1
    container_name: usvc_zoo1
    restart: on-failure
    ports:
      - 0.0.0.0:2182:2181
      - 0.0.0.0:9081:8080
    networks:
      - usvcnet
    volumes:
      - ${ZOOKEPER_DATA_DIR}/1:/data
      - ${ZOOKEPER_DATALOG_DIR}/1:/datalog
      - ${ZOOKEPER_LOGS_DIR}/1:/logs
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=usvc_zoo2:2888:3888;2181 server.3=usvc_zoo3:2888:3888;2181
  zookeeper2:
    image: zookeeper:3.6.1
    container_name: usvc_zoo2
    restart: on-failure
    ports:
      - 0.0.0.0:2183:2181
      - 0.0.0.0:9082:8080
    networks:
      - usvcnet
    volumes:
      - ${ZOOKEPER_DATA_DIR}/2:/data
      - ${ZOOKEPER_DATALOG_DIR}/2:/datalog
      - ${ZOOKEPER_LOGS_DIR}/2:/logs
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=usvc_zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=usvc_zoo3:2888:3888;2181
  zookeeper3:
    image: zookeeper:3.6.1
    container_name: usvc_zoo3
    restart: on-failure
    ports:
      - 0.0.0.0:2184:2181
      - 0.0.0.0:9083:8080
    networks:
      - usvcnet
    volumes:
      - ${ZOOKEPER_DATA_DIR}/3:/data
      - ${ZOOKEPER_DATALOG_DIR}/3:/datalog
      - ${ZOOKEPER_LOGS_DIR}/3:/logs
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=usvc_zoo1:2888:3888;2181 server.2=usvc_zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
  kafka1:
    container_name: usvc_kafka1
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - 0.0.0.0:9192:9092
      - 0.0.0.0:9193:9093
    hostname: usvc_kafka1
    networks:
      - usvcnet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: KAFKALISTENER://usvc_kafka1:9092,KAFKALISTENERSSL://usvc_kafka1:9093
      KAFKA_ADVERTISED_LISTENERS: KAFKALISTENER://usvc_kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: usvc_zoo1:2181,usvc_zoo2:2181,usvc_zoo3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKALISTENER:PLAINTEXT,KAFKALISTENERSSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKALISTENER
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
  kafka2:
    container_name: usvc_kafka2
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - 0.0.0.0:9292:9092
      - 0.0.0.0:9293:9093
    hostname: usvc_kafka2
    networks:
      - usvcnet
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: KAFKALISTENER://usvc_kafka2:9092,KAFKALISTENERSSL://usvc_kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: KAFKALISTENER://usvc_kafka2:9092
      KAFKA_ZOOKEEPER_CONNECT: usvc_zoo1:2181,usvc_zoo2:2181,usvc_zoo3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKALISTENER:PLAINTEXT,KAFKALISTENERSSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKALISTENER
    depends_on:
      - kafka1
  kafka3:
    container_name: usvc_kafka3
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - 0.0.0.0:9392:9092
      - 0.0.0.0:9393:9093
    hostname: usvc_kafka3
    networks:
      - usvcnet
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: KAFKALISTENER://usvc_kafka3:9092,KAFKALISTENERSSL://usvc_kafka3:9093
      KAFKA_ADVERTISED_LISTENERS: KAFKALISTENER://usvc_kafka3:9092
      KAFKA_ZOOKEEPER_CONNECT: usvc_zoo1:2181,usvc_zoo2:2181,usvc_zoo3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKALISTENER:PLAINTEXT,KAFKALISTENERSSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKALISTENER
    depends_on:
      - kafka2

networks:
  usvcnet:
    driver: bridge
